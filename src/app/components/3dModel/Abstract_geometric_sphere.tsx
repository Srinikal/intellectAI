/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 ./public/abstract_geometric_sphere.glb -T -t 
Files: ./public/abstract_geometric_sphere.glb [683.17KB] > C:\Users\ewang\vscode files\intellect\abstract_geometric_sphere-transformed.glb [88.84KB] (87%)
Author: Tahsin R. Pulok (https://sketchfab.com/tahsinpulok)
License: CC-BY-NC-ND-4.0 (http://creativecommons.org/licenses/by-nc-nd/4.0/)
Source: https://sketchfab.com/3d-models/abstract-geometric-sphere-3464833d7d13489c8143917d4ce29356
Title: Abstract Geometric Sphere
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Material2: THREE.Mesh
  }
  materials: {
    edge_color000255: THREE.LineBasicMaterial
    material: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/abstract_geometric_sphere-transformed.glb') as GLTFResult

  const group = useRef<THREE.Group>(null)

  useFrame(({camera}) => {
    group.current?.rotateY(THREE.MathUtils.degToRad(0.2));
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Material2.geometry} material={materials.material} rotation={[-1.026, -0.281, 1.118]} scale={0.006} material-color="#588FEF"/>
    </group>
  )
}

useGLTF.preload('/abstract_geometric_sphere-transformed.glb')
